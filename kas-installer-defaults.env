trap 'echo "** Unbound variable must be configured in kas-installer.env or user environment"' EXIT

# [required]
# Principal name to be used for Keycloak client and user representing the owner of a Kafka cluster. See `ocm whoami | jq -r .username`
#
RH_USERNAME="${RH_USERNAME}"

# [required]
# Owning users RH account_id. See `str=$(ocm token | awk -F'.' '{print $2}')===; echo ${str:0:${#str}&-4} | base64 -d | jq -r .account_id`
#
RH_USER_ID="${RH_USER_ID}"

# [required]
# Owning users RH org_id. See `str=$(ocm token | awk -F'.' '{print $2}')===; echo ${str:0:${#str}&-4} | base64 -d | jq -r .org_id`
#
RH_ORG_ID="${RH_ORG_ID}"

# [required]
# GitHub Personal Access token to be used by Observability Operator to fetch the Observability configuration from the
# Observability configuration git repository. The token should have read access to the configuration git repository
#
OBSERVABILITY_CONFIG_ACCESS_TOKEN="${OBSERVABILITY_CONFIG_ACCESS_TOKEN}"

# [required]
# Login credentials for the container repository containing the KAS components container images
#
IMAGE_REPOSITORY_USERNAME="${IMAGE_REPOSITORY_USERNAME}"
IMAGE_REPOSITORY_PASSWORD="${IMAGE_REPOSITORY_PASSWORD}"

# [required]
# DNS domain of the K8s cluster where KAS components will be deployed
#
K8S_CLUSTER_DOMAIN="${K8S_CLUSTER_DOMAIN}"

# [optional]
# RH SSO host name when using 'SSO_PROVIDER_TYPE' of 'redhat_sso'. Defaults to stage environment
#
REDHAT_SSO_HOSTNAME="${REDHAT_SSO_HOSTNAME:-"sso.stage.redhat.com"}"

# [optional]
# Type of SSO provider, see 'SSO_PROVIDER_TYPE' in
# https://github.com/bf2fc6cc711aee1a0c2a/kas-fleet-manager/blob/main/templates/service-template.yml

SSO_PROVIDER_TYPE="${SSO_PROVIDER_TYPE:-"mas_sso"}"

if [ "${SSO_PROVIDER_TYPE}" = 'redhat_sso' ] ; then
    # [optional]
    # RH SSO realm when using 'SSO_PROVIDER_TYPE' of 'redhat_sso'.
    #
    REDHAT_SSO_REALM="${REDHAT_SSO_REALM:-"redhat-external"}"

    # [required for RH SSO]
    # SSO client ID when using 'SSO_PROVIDER_TYPE' of 'redhat_sso'. This client will be used by kas-fleet-manager to
    # provision service accounts. The client will also be used by default to provision Kafka clusters with the
    # managed_kafka.sh script.
    #
    REDHAT_SSO_CLIENT_ID="${REDHAT_SSO_CLIENT_ID}"

    # [required for RH SSO]
    # SSO client secret when using 'SSO_PROVIDER_TYPE' of 'redhat_sso'.
    #
    REDHAT_SSO_CLIENT_SECRET="${REDHAT_SSO_CLIENT_SECRET}"

    # [optional]
    # RH client scope to be requested for tokens retrieved from RH SSO
    #
    REDHAT_SSO_SCOPE="${REDHAT_SSO_SCOPE:-"api.iam.service_accounts"}"
fi

# [optional]
# OLM bundle index image and tag to deploy MAS-SSO instance
#
MAS_SSO_OLM_INDEX_IMAGE="${MAS_SSO_OLM_INDEX_IMAGE:-"quay.io/rhoas/mas-sso-operator-catalog"}"
MAS_SSO_OLM_INDEX_IMAGE_TAG="${MAS_SSO_OLM_INDEX_IMAGE_TAG:-"f08a770"}"

# [optional]
# KAS Fleet Manager container image registry (quay.io, docker.io, ...)
#
KAS_FLEET_MANAGER_IMAGE_REGISTRY="${KAS_FLEET_MANAGER_IMAGE_REGISTRY:-"quay.io"}"

# [optional]
# KAS Fleet Manager container image repository credentials' username
#
KAS_FLEET_MANAGER_IMAGE_REPOSITORY_USERNAME="${KAS_FLEET_MANAGER_IMAGE_REPOSITORY_USERNAME:-${IMAGE_REPOSITORY_USERNAME}}"

# [optional]
# KAS Fleet Manager container image repository credentials' password
#
KAS_FLEET_MANAGER_IMAGE_REPOSITORY_PASSWORD="${KAS_FLEET_MANAGER_IMAGE_REPOSITORY_PASSWORD:-${IMAGE_REPOSITORY_PASSWORD}}"

# [optional]
# KAS Fleet Manager container image repository
#
KAS_FLEET_MANAGER_IMAGE_REPOSITORY="${KAS_FLEET_MANAGER_IMAGE_REPOSITORY:-"bf2fc6cc711aee1a0c2a82e312df7f2e6b37baa12bd9b1f2fd752e260d93a6f8144ac730947f25caa2bfe6ad0f410da360940ee6d28d6c1688d3822c4055650e/kas-fleet-manager"}"

# [optional]
# KAS Fleet Manager container image tag
#
KAS_FLEET_MANAGER_IMAGE_TAG="${KAS_FLEET_MANAGER_IMAGE_TAG:-"c97e8cd"}"

# [optional]
# Build the KAS Fleet Manager image from source (determined by KAS_FLEET_MANAGER_GIT_URL and KAS_FLEET_MANAGER_GIT_REF)
# and push to the internal OpenShift registry. The KAS Fleet Manager will still be configured with a pull secret for pulling
# images from KAS_FLEET_MANAGER_IMAGE_REGISTRY.
#
KAS_FLEET_MANAGER_IMAGE_BUILD="${KAS_FLEET_MANAGER_IMAGE_BUILD:-"false"}"

# [optional]
# KAS Fleet Manager's git repository. Source repository reference for KAS fleet manager. Must be a public repository URL
#
KAS_FLEET_MANAGER_GIT_URL="${KAS_FLEET_MANAGER_GIT_URL:-"https://github.com/bf2fc6cc711aee1a0c2a/kas-fleet-manager"}"

# [optional]
# KAS Fleet Manager's git reference. A commit ID, branch name or tag can be used. The commit ID should be compatible with
# the container image contents used
#
KAS_FLEET_MANAGER_GIT_REF="${KAS_FLEET_MANAGER_GIT_REF:-"c97e8cd2199daeca18fc7ce6f94e1d0da82594ae"}"

# [optional]
# OCM offline token for use with kas-fleet-manager's "ocm" cluster provider
OCM_SERVICE_TOKEN="${OCM_SERVICE_TOKEN:-}"

# [optional]
# OCM cluster ID for use with kas-fleet-manager's "ocm" cluster provider. Also used as the cluster ID in standalone mode.
OCM_CLUSTER_ID="${OCM_CLUSTER_ID:-"dev-dataplane-cluster"}"

# [optional]
# Repository address and ref to use for the Observability repository. Set these to test with custom Observability resources.
#
OBSERVABILITY_CONFIG_REPO="${OBSERVABILITY_CONFIG_REPO:-"https://api.github.com/repos/bf2fc6cc711aee1a0c2a/observability-resources-mk/contents"}"
OBSERVABILITY_CONFIG_TAG="${OBSERVABILITY_CONFIG_TAG:-"v1.38.0"}"

# [optional]
# Zone the cluster is in
REGION="${REGION:-"us-east-1"}"

# [optional]
# Namespace to deploy KAS Fleetshard operator
KAS_FLEETSHARD_OPERATOR_NAMESPACE="${KAS_FLEETSHARD_OPERATOR_NAMESPACE:-}"

# [optional]
# KAS Fleetshard operator OLM bundle index image reference
KAS_FLEETSHARD_OLM_INDEX_IMAGE="${KAS_FLEETSHARD_OLM_INDEX_IMAGE:-"quay.io/osd-addons/rhosak-fleetshard-operator-bundle-index:v4.10-v1.0.8-1"}"

# [optional]
# Namespace to deploy Strimzi cluster operator
STRIMZI_OPERATOR_NAMESPACE="${STRIMZI_OPERATOR_NAMESPACE:-}"

# [optional]
# Strimzi cluster operator OLM bundle index image reference
STRIMZI_OLM_INDEX_IMAGE="${STRIMZI_OLM_INDEX_IMAGE:-"quay.io/osd-addons/rhosak-strimzi-operator-bundle-index:v4.10-v0.1.5-6"}"

# [optional]
# TLS certificate to be used with the Kafka instance listeners and the admin API server. Must also configure the value
# of ENABLE_KAFKA_EXTERNAL_CERTIFICATE to 'true' using kas-fleet-manager parameter customization (see README)
#
KAFKA_TLS_CERT="${KAFKA_TLS_CERT:-}"

# [optional]
# TLS key to be used with the Kafka instance listeners and the admin API server. Must also configure the value
# of ENABLE_KAFKA_EXTERNAL_CERTIFICATE to 'true' using kas-fleet-manager parameter customization (see README)
#
KAFKA_TLS_KEY="${KAFKA_TLS_KEY:-}"

# [optional]
# JSON content used to patch the Observability resource. May be used to customize the resyncPeriod, for example.
#
OBSERVABILITY_CR_MERGE_PATCH_CONTENT="${OBSERVABILITY_CR_MERGE_PATCH_CONTENT:-}"

trap - EXIT
