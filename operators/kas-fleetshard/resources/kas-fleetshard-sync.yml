---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: kas-fleetshard-sync
  name: kas-fleetshard-sync
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: kas-fleetshard-sync
  name: kas-fleetshard-sync
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app.kubernetes.io/name: kas-fleetshard-sync
  type: ClusterIP
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: view-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kas-fleetshard-sync-view
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: kas-fleetshard-sync
subjects:
- kind: ServiceAccount
  name: kas-fleetshard-sync
  namespace: redhat-kas-fleetshard-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kas-fleetshard-sync-view-secrets
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: view-secrets
subjects:
- kind: ServiceAccount
  name: kas-fleetshard-sync
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: kas-fleetshard-sync
    app.kubernetes.io/name: kas-fleetshard-sync
  name: kas-fleetshard-sync
rules:
- apiGroups:
  - managedkafka.bf2.org
  resources:
  - managedkafkas
  - managedkafkas/status
  - managedkafkaagents
  - managedkafkaagents/status
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - create
  - delete
  - update
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: kas-fleetshard-sync
  name: kas-fleetshard-sync
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kas-fleetshard-sync
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kas-fleetshard-sync
    spec:
      serviceAccount: kas-fleetshard-sync
      volumes:
      - configMap:
          defaultMode: 384
          name: sync-logging-config-override
          optional: true
        name: logging-config-volume
      imagePullSecrets:
      - name: rhoas-image-pull-secret
      containers:
      - name: kas-fleetshard-sync
        image: quay.io/mk-ci-cd/kas-fleetshard-sync:0.6.0
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: QUARKUS_PROFILE
          value: prod
        - name: QUARKUS_KUBERNETES_CONFIG_ENABLED
          value: "true"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /q/health/live
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /q/health/ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /config
          name: logging-config-volume
          readOnly: false
          subPath: ""
